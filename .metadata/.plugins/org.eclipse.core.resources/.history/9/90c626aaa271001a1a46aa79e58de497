/*
 * Annuaire.cpp
 *
 *  Created on: 2020-03-21
 *      Author: etudiant
 */

#include "Annuaire.h"
#include "validationFormat.h"
#include <sstream>
#include <iostream>
#include "Date.h"

using namespace std;
using namespace util;

namespace hockey
{

    Annuaire::Annuaire(string p_nomClub): m_nomClub(p_nomClub)
	{
    	for( unsigned i = 0; i < m_vMembres.size();i++)
    	  {
    	    m_vMembres[i]= NULL;
    	  }
	}


    Annuaire::Annuaire(const Annuaire& p_Annuaire):m_nomClub(p_Annuaire.reqNomClub())
    {
    	for( unsigned i = 0; i < m_vMembres.size();i++)
    	{
    	   m_vMembres[i]= p_Annuaire.m_vMembres[i];
    	}
    }

    Annuaire::~Annuaire()
    {

    }

    const string& Annuaire::reqNomClub() const
     {
    	return m_nomClub;
     }

    /**
     * \brief retourne les éléments de annuaire contenus dans un vecteur de pointeur sur des object de type personne
     * \return un vecteur de pointeur sur des object de type personne, copie du contenu de la pile (retour par valeur)
    */
    vector<Personne*> Annuaire::reqAnnuaire() const
    {
    	return m_vMembres;
    }


    void Annuaire::ajouterPersonne(const Personne& p_personne)
    {
    	m_vMembres.push_back(p_personne.clone());
    }


    string Annuaire::reqAnnuaireFormate() const
    {
       ostringstream os;
       os << "Club              : ";
       os<< reqNomClub()<< endl;
       os << "------------------: "<<endl;

      for( unsigned i = 0; i < m_vMembres.size();i++)
      {
    	 os<< (m_vMembres[i]->reqPesonneFormatee());
    	 os << "------------------: "<<endl;
      }
         return os.str();
    }

}


